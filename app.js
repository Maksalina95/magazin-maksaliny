// ‚úÖ ID —Ç–≤–æ–µ–π Google –¢–∞–±–ª–∏—Ü—ã
const sheetId = '1gBcuPzWv_nH2i7sWyCaERVCjO-hLg8EcndPkEMlNqgw';

// ‚úÖ –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–≤ –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö!)
const url = `https://opensheet.elk.sh/${sheetId}/–õ–∏—Å—Ç1`;

const productList = document.getElementById('product-list');
const searchInput = document.getElementById('search');

let products = [];

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Google –¢–∞–±–ª–∏—Ü—ã
fetch(url)
  .then(res => res.json())
  .then(data => {
    products = data;
    renderProducts(products);
  })
  .catch(err => {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤:', err);
    productList.innerHTML = '<p style="color: red;">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã. –ü—Ä–æ–≤–µ—Ä—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–∞–±–ª–∏—Ü–µ.</p>';
  });

// –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
function renderProducts(items) {
  productList.innerHTML = '';

  items.forEach(item => {
    if (!item.—Ñ–æ—Ç–æ || !item.–Ω–∞–∑–≤–∞–Ω–∏–µ || !item.—Ü–µ–Ω–∞) return;

    const el = document.createElement('div');
    el.className = 'product';
    el.innerHTML = `
      <img src="${item.—Ñ–æ—Ç–æ}" alt="${item.–Ω–∞–∑–≤–∞–Ω–∏–µ}" style="max-width: 100%; height: auto; object-fit: contain;">
      <h3>${item.–Ω–∞–∑–≤–∞–Ω–∏–µ}</h3>
      <p><b>${item.—Ü–µ–Ω–∞} ‚ÇΩ</b></p>
      <p>${item.–æ–ø–∏—Å–∞–Ω–∏–µ || ''}</p>
      <div class="buttons">
        <a href="https://wa.me/79376280080" target="_blank">WhatsApp</a>
        <a href="https://t.me/internet_magazin_v_ingushetii" target="_blank">Telegram</a>
        <a href="https://instagram.com" target="_blank">Instagram</a>
      </div>
    `;
    productList.appendChild(el);
  });
}

// üîç –ü–æ–∏—Å–∫ –ø–æ —Ç–æ–≤–∞—Ä–∞–º
searchInput.addEventListener('input', () => {
  const value = searchInput.value.toLowerCase();
  const filtered = products.filter(p =>
    p.–Ω–∞–∑–≤–∞–Ω–∏–µ?.toLowerCase().includes(value) ||
    p.–æ–ø–∏—Å–∞–Ω–∏–µ?.toLowerCase().includes(value) ||
    p.–∫–∞—Ç–µ–≥–æ—Ä–∏—è?.toLowerCase().includes(value) ||
    p.–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è?.toLowerCase().includes(value)
  );
  renderProducts(filtered);
});
